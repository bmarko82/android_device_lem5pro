From 55da40fc59c680b73b0d9bdb4ea398ae395ece16 Mon Sep 17 00:00:00 2001
From: Wang Xuerui <idontknw.wang@gmail.com>
Date: Sat, 9 Jan 2016 16:54:38 +0800
Subject: [PATCH] libgui: SensorManager: be compatible with MTK Lollipop blobs

Change-Id: I1846c5f3c629293c0f0fc0a6762f6f7b5b9bd9b5

libgui: SensorManager: fix

Change-Id: I76e0ba036ef4e4acc15c9e6f87cb00dd37fae7c9
---
 include/gui/SensorManager.h | 17 +++++++++++++++++
 libs/gui/SensorManager.cpp  | 26 ++++++++++++++++++++++++++
 2 files changed, 43 insertions(+)

diff --git a/include/gui/SensorManager.h b/include/gui/SensorManager.h
index 0cff46c0762..f5007760308 100644
--- a/include/gui/SensorManager.h
+++ b/include/gui/SensorManager.h
@@ -56,7 +56,12 @@ class SensorManager :
 
     ssize_t getSensorList(Sensor const* const** list) const;
     Sensor const* getDefaultSensor(int type);
+#ifdef MTK_HARDWARE
+    sp<SensorEventQueue> createEventQueue(String8 packageName, int mode = 0);
+    sp<SensorEventQueue> createEventQueue();
+#else
     sp<SensorEventQueue> createEventQueue(String8 packageName = String8(""), int mode = 0);
+#endif
     bool isDataInjectionEnabled();
 
 private:
@@ -64,6 +69,9 @@ class SensorManager :
     void sensorManagerDied();
 
     SensorManager(const String16& opPackageName);
+#ifdef MTK_HARDWARE
+    SensorManager();
+#endif
     status_t assertStateLocked() const;
 
 private:
@@ -78,6 +86,15 @@ class SensorManager :
     const String16 mOpPackageName;
 };
 
+
+#ifdef MTK_HARDWARE
+// be compatible with MTK Lollipop blobs
+extern "C" {
+    extern android::Mutex _ZN7android9SingletonINS_13SensorManagerEE5sLockE;
+    extern SensorManager *_ZN7android9SingletonINS_13SensorManagerEE9sInstanceE;
+}
+#endif  // MTK_HARDWARE
+
 // ----------------------------------------------------------------------------
 }; // namespace android
 
diff --git a/libs/gui/SensorManager.cpp b/libs/gui/SensorManager.cpp
index 33608b5bd2d..08ce28743e5 100644
--- a/libs/gui/SensorManager.cpp
+++ b/libs/gui/SensorManager.cpp
@@ -39,6 +39,32 @@ namespace android {
 android::Mutex android::SensorManager::sLock;
 std::map<String16, SensorManager*> android::SensorManager::sPackageInstances;
 
+#ifdef MTK_HARDWARE
+
+static const String8 packageName8("");
+
+
+// be compatible with MTK Lollipop blobs
+extern "C" {
+    android::Mutex _ZN7android9SingletonINS_13SensorManagerEE5sLockE;
+    SensorManager *_ZN7android9SingletonINS_13SensorManagerEE9sInstanceE = nullptr;
+}
+
+
+// compatible ctor
+SensorManager::SensorManager()
+    : mSensorList(0), mOpPackageName("")
+{
+    // okay we're not locked here, but it's not needed during construction
+    assertStateLocked();
+}
+
+
+sp<SensorEventQueue> SensorManager::createEventQueue() {
+	return createEventQueue(packageName8, 0);
+}
+#endif  // MTK_HARDWARE
+
 SensorManager& SensorManager::getInstanceForPackage(const String16& packageName) {
     Mutex::Autolock _l(sLock);
     SensorManager* sensorManager;
